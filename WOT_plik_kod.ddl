-- Generated by Oracle SQL Developer Data Modeler 20.2.0.167.1538
--   at:        2020-12-11 00:09:21 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE OR REPLACE FUNCTION losujGracza (
    idbitwy  INT,
    flaga    BOOLEAN,
    numer    INT
) RETURNS int AS 
BEGIN
 if(flaga = 0) THEN
    if((select count(*) from gracz where  ISNULL(id_bitwy) and ISNULL(id_plutonu)) > 0) then
    	UPDATE gracz set id_bitwy = idBitwy, druzyna = numer WHERE ISNULL(id_bitwy) and ISNULL(id_bitwy_klanowej) and ISNULL(id_plutonu) ORDER BY RAND() LIMIT 1;
    	return 1;
else 
	RETURN 0;
    END IF;
ELSE
RETURN 0;
END IF END;
/

CREATE OR REPLACE FUNCTION losujpluton (
    idbitwy  INT,
    numer    INT
) RETURN INT AS BEGIN DECLARE
    flaga    INT;
    declare  pluton int;
 	SELECT count(*) into flaga FROM gracz where ISNULL(id_bitwy) and ISNULL(id_bitwy_klanowej) and id_plutonu is not null;
    if (flaga > 1)
     	THEN
        SELECT id_plutonu into pluton FROM gracz where id_plutonu is not null order by
    rand
() LIMIT 1;
    UPDATE gracz
    SET
        id_bitwy = idbitwy,
        druzyna = numer
    WHERE
        id_plutonu = pluton;

    RETURN 1;
END IF;
    RETURN 0;END;
/

CREATE OR REPLACE PROCEDURElosowanielosowanielosowanieIN nowe_id INT,  IN numer INT) losowanie AS 
BEGIN
    DECLARE flaga boolean default 0;
    DECLARE one_ boolean default 0;
    DECLARE i int DEFAULT 0;
   
    WHILE (i < 15) DO
        IF(rand() > 0.85) THEN
            SELECT losujPluton(nowe_id, numer) INTO flaga;
            SELECT losujGracza(nowe_id, flaga, numer) INTO one_;
            SELECT losujGracza(nowe_id, flaga, numer) INTO one_;
            SET i = i + 2;
        ELSE
            SELECT losujGracza(nowe_id, 0, numer) INTO one_;
            if(one_ = 0) THEN
            	SELECT losujPluton(nowe_id, numer) INTO flaga;
                 SET i = i + 2;
            ELSE
            SET i = i + 1;
            END IF;
        END IF;
       
    END WHILE;
    
END
/

CREATE OR REPLACE PROCEDURElosujKlanlosujKlanlosujKlanIN id_bitwy_k INT, IN nazwa VARCHAR(100) losujKlan AS 
BEGIN
UPDATE GRACZ SET id_bitwy_klanowej = id_bitwy_k
where ISNULL(id_plutonu) and ISNUL(id_bitwy) and ISNUL(id_bitwy_klanowej) and nazwa_klanu = nazwa ORDER BY RAND() LIMIT 15;
END
/

CREATE TABLE bitwa_klanow (
    bitwa_id_bitwy     INTEGER NOT NULL,
    wskazówka          VARCHAR2(500),
    klan_nazwa_klanu   VARCHAR2(100) NOT NULL,
    klan_nazwa_klanu1  VARCHAR2(100) NOT NULL,
    nazwa_mapy         VARCHAR2(200) NOT NULL
)
LOGGING;

ALTER TABLE bitwa_klanow ADD CONSTRAINT bitwa_klanow_pk PRIMARY KEY ( bitwa_id_bitwy );

CREATE TABLE bitwa_losowa (
    bitwa_id_bitwy       INTEGER NOT NULL,
    wskazówka            VARCHAR2(500),
    wot_mapa_nazwa_mapy  VARCHAR2(200) NOT NULL
)
LOGGING;

ALTER TABLE bitwa_losowa ADD CONSTRAINT bitwa_losowa_pk PRIMARY KEY ( bitwa_id_bitwy );

CREATE TABLE czolg (
    nazwa           VARCHAR2(100) NOT NULL,
    model           BLOB NOT NULL,
    pancerz         NUMBER(10, 2) NOT NULL,
    zycie           INTEGER NOT NULL,
    sila_ognia      NUMBER(10, 2) NOT NULL,
    tier            INTEGER NOT NULL,
    nacja           VARCHAR2(50) NOT NULL,
    typ_czolgu_typ  VARCHAR2(50) NOT NULL
)
LOGGING;

ALTER TABLE czolg ADD CONSTRAINT czolg_pk PRIMARY KEY ( nazwa,
                                                        typ_czolgu_typ );

CREATE TABLE garaz (
    gracz_nick                VARCHAR2(50) NOT NULL,
    czolg_nazwa               VARCHAR2(100) NOT NULL,
    stylizacja_id_stylizacji  INTEGER,
    czolg_typ_czolgu_typ      VARCHAR2(50) NOT NULL
)
LOGGING;

ALTER TABLE garaz
    ADD CONSTRAINT garaz_pk PRIMARY KEY ( gracz_nick,
                                          czolg_nazwa,
                                          czolg_typ_czolgu_typ );

CREATE TABLE gracz (
    nick                 VARCHAR2(50) NOT NULL,
    srednie_uszkozdenia  NUMBER(10, 2) NOT NULL,
    wygranych_bitew      NUMBER(10, 2) NOT NULL,
    przegranych_bitew    NUMBER(10, 2) NOT NULL,
    remisow              NUMBER(10, 2) NOT NULL,
    wn8                  NUMBER(10, 2),
    klan_nazwa_klanu     VARCHAR2(100),
    pluton_id_plutonu    INTEGER
)
LOGGING;

ALTER TABLE gracz ADD CONSTRAINT gracz_pk PRIMARY KEY ( nick );

CREATE TABLE klan (
    nazwa_klanu         VARCHAR2(100) NOT NULL,
    maks_liczba_graczy  INTEGER NOT NULL,
    ilosc_prowincji     INTEGER NOT NULL
)
LOGGING;

ALTER TABLE klan ADD CONSTRAINT klan_pk PRIMARY KEY ( nazwa_klanu );

CREATE TABLE pluton (
    id_plutonu        INTEGER NOT NULL,
    data_wygasniecia  DATE
)
LOGGING;

ALTER TABLE pluton ADD CONSTRAINT pluton_pk PRIMARY KEY ( id_plutonu );

CREATE TABLE relation_10 (
    gracz_nick  VARCHAR2(50) NOT NULL,
    id_bitwy    INTEGER NOT NULL
)
LOGGING;

ALTER TABLE relation_10 ADD CONSTRAINT relation_10_pk PRIMARY KEY ( gracz_nick,
                                                                    id_bitwy );

CREATE TABLE stylizacja (
    id_stylizacji  INTEGER NOT NULL,
    zdjecie        BLOB NOT NULL,
    opis           VARCHAR2(200) NOT NULL
)
LOGGING;

ALTER TABLE stylizacja ADD CONSTRAINT stylizacja_pk PRIMARY KEY ( id_stylizacji );

CREATE TABLE typ_czolgu (
    typ    VARCHAR2(50) NOT NULL,
    ikona  BLOB NOT NULL
)
LOGGING;

ALTER TABLE typ_czolgu ADD CONSTRAINT typ_czolgu_pk PRIMARY KEY ( typ );

CREATE TABLE wot_mapa (
    nazwa_mapy  VARCHAR2(200) NOT NULL,
    opis_mapy   VARCHAR2(500) NOT NULL,
    rozmiar     INTEGER NOT NULL,
    zdjecie     BLOB NOT NULL,
    typ_mapy    VARCHAR2(200) NOT NULL
)
LOGGING;

ALTER TABLE wot_mapa ADD CONSTRAINT wot_mapa_pk PRIMARY KEY ( nazwa_mapy );

CREATE TABLE wot_typ_mapy 
    (
    nazwa_mapy    VARCHAR2(200) NOT NULL,
    pogoda        VARCHAR2(100) NOT NULL,
    rodzaj_bitwy  VARCHAR2(200) NOT NULL,
    czas_bitwy_[minuty] INTEGER NOT null ) logging 
;

ALTER TABLE wot_typ_mapy ADD CONSTRAINT wot_typ_mapy_pk PRIMARY KEY ( nazwa_mapy );

ALTER TABLE bitwa_klanow
    ADD CONSTRAINT bitwa_klanow_klan_fk FOREIGN KEY ( klan_nazwa_klanu )
        REFERENCES klan ( nazwa_klanu )
    NOT DEFERRABLE;

ALTER TABLE bitwa_klanow
    ADD CONSTRAINT bitwa_klanow_klan_fkv2 FOREIGN KEY ( klan_nazwa_klanu1 )
        REFERENCES klan ( nazwa_klanu )
    NOT DEFERRABLE;

ALTER TABLE bitwa_klanow
    ADD CONSTRAINT bitwa_klanow_wot_mapa_fk FOREIGN KEY ( nazwa_mapy )
        REFERENCES wot_mapa ( nazwa_mapy )
    NOT DEFERRABLE;

ALTER TABLE bitwa_losowa
    ADD CONSTRAINT bitwa_losowa_wot_mapa_fk FOREIGN KEY ( wot_mapa_nazwa_mapy )
        REFERENCES wot_mapa ( nazwa_mapy )
    NOT DEFERRABLE;

ALTER TABLE czolg
    ADD CONSTRAINT czolg_typ_czolgu_fk FOREIGN KEY ( typ_czolgu_typ )
        REFERENCES typ_czolgu ( typ )
    NOT DEFERRABLE;

ALTER TABLE garaz
    ADD CONSTRAINT garaz_czolg_fk FOREIGN KEY ( czolg_nazwa,
                                                czolg_typ_czolgu_typ )
        REFERENCES czolg ( nazwa,
                           typ_czolgu_typ )
    NOT DEFERRABLE;

ALTER TABLE garaz
    ADD CONSTRAINT garaz_gracz_fk FOREIGN KEY ( gracz_nick )
        REFERENCES gracz ( nick )
    NOT DEFERRABLE;

ALTER TABLE garaz
    ADD CONSTRAINT garaz_stylizacja_fk FOREIGN KEY ( stylizacja_id_stylizacji )
        REFERENCES stylizacja ( id_stylizacji )
    NOT DEFERRABLE;

ALTER TABLE gracz
    ADD CONSTRAINT gracz_klan_fk FOREIGN KEY ( klan_nazwa_klanu )
        REFERENCES klan ( nazwa_klanu )
    NOT DEFERRABLE;

ALTER TABLE gracz
    ADD CONSTRAINT gracz_pluton_fk FOREIGN KEY ( pluton_id_plutonu )
        REFERENCES pluton ( id_plutonu )
    NOT DEFERRABLE;

ALTER TABLE relation_10
    ADD CONSTRAINT relation_10_bitwa_losowa_fk FOREIGN KEY ( id_bitwy )
        REFERENCES bitwa_losowa ( bitwa_id_bitwy )
    NOT DEFERRABLE;

ALTER TABLE relation_10
    ADD CONSTRAINT relation_10_gracz_fk FOREIGN KEY ( gracz_nick )
        REFERENCES gracz ( nick )
    NOT DEFERRABLE;

ALTER TABLE wot_mapa
    ADD CONSTRAINT wot_mapa_wot_typ_mapy_fk FOREIGN KEY ( typ_mapy )
        REFERENCES wot_typ_mapy ( nazwa_mapy )
    NOT DEFERRABLE;

CREATE SEQUENCE bitwa_klanow_bitwa_id_bitwy START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER bitwa_klanow_bitwa_id_bitwy BEFORE
    INSERT ON bitwa_klanow
    FOR EACH ROW
    WHEN ( new.bitwa_id_bitwy IS NULL )
BEGIN
    :new.bitwa_id_bitwy := bitwa_klanow_bitwa_id_bitwy.nextval;
END;
/

CREATE SEQUENCE bitwa_losowa_bitwa_id_bitwy START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER bitwa_losowa_bitwa_id_bitwy BEFORE
    INSERT ON bitwa_losowa
    FOR EACH ROW
    WHEN ( new.bitwa_id_bitwy IS NULL )
BEGIN
    :new.bitwa_id_bitwy := bitwa_losowa_bitwa_id_bitwy.nextval;
END;
/

CREATE SEQUENCE pluton_id_plutonu_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER pluton_id_plutonu_trg BEFORE
    INSERT ON pluton
    FOR EACH ROW
    WHEN ( new.id_plutonu IS NULL )
BEGIN
    :new.id_plutonu := pluton_id_plutonu_seq.nextval;
END;
/

CREATE SEQUENCE stylizacja_id_stylizacji_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER stylizacja_id_stylizacji_trg BEFORE
    INSERT ON stylizacja
    FOR EACH ROW
    WHEN ( new.id_stylizacji IS NULL )
BEGIN
    :new.id_stylizacji := stylizacja_id_stylizacji_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            12
-- CREATE INDEX                             0
-- ALTER TABLE                             25
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         2
-- CREATE FUNCTION                          2
-- CREATE TRIGGER                           4
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          4
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
